swagger: '2.0'
info:
  version: 1.0.0
  title: Hapi boilerplate
basePath: /api/v1
schemes:
  - http
  - https
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - multipart/form-data
  - text/plain
produces:
  - application/json
paths:
  /resources:
    get:
      operationId: findResource
      description: Get list of resources
      tags:
        - resource
      parameters:
        - $ref: './common.yaml#/parameters/LimitQuery'
        - $ref: './common.yaml#/parameters/OffsetQuery'
        - $ref: './common.yaml#/parameters/OrderByQuery'
        - $ref: './common.yaml#/parameters/OrderDirectionQuery'
      responses:
        200:
          description: List of Resource
          headers:
            x-meta-total:
              type: integer
              minimum: 0
              description: Get total number of entries in database
          schema:
            type: array
            items:
              $ref: './models/resource.yaml#/get'
    post:
      operationId: createResource
      description: Create new resource
      tags:
        - resource
      parameters:
        - name: model
          in: body
          required: true
          schema:
            $ref: './models/resource.yaml#/create'
      responses:
        200:
          description: Resource response
          schema:
            $ref: './models/resource.yaml#/get'

  /resources/{id}:
    get:
      operationId: getResource
      description: Get resource by ID
      tags:
        - resource
      parameters:
        - $ref: '#/parameters/ResourceIdParam'
      responses:
        200:
          description: Resource response
          schema:
            $ref: './models/resource.yaml#/get'
    put:
      operationId: updateResource
      description: Update resource by ID
      tags:
        - resource
      parameters:
        - $ref: '#/parameters/ResourceIdParam'
        - name: model
          in: body
          required: true
          schema:
            $ref: './models/resource.yaml#/update'
      responses:
        200:
          description: Resource response
          schema:
            $ref: './models/resource.yaml#/get'
    delete:
      operationId: deleteResource
      description: Delete resource by ID
      tags:
        - resource
      parameters:
        - $ref: '#/parameters/ResourceIdParam'
      responses:
        204:
          description: Resource deleted

  /resources/{id}/url:
    get:
      operationId: getResourceUrl
      description: Get the link to object(file) stored in resource
      tags:
      - resource
      parameters:
      - $ref: '#/parameters/ResourceIdParam'
      - name: operation
        in: query
        type: string
        enum:
        - get
        - put
        default: get
      responses:
        200:
          description: Url response
          schema:
            $ref: '#/definitions/UrlResponse'

parameters:
  ResourceIdParam:
    name: id
    in: path
    required: true
    type: string
definitions:
  UrlResponse:
    type: object
    properties:
      url:
        type: string
        format: url
      taskId:
        type: string
        format: uuid
    required:
      - url
